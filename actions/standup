#!/bin/bash
###############################################################################
##
# FILE:         lsdonesince
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Jonathan C. Dietrich <jcdietrich@gmail.com>
# DATE CREATED: 2023-07-15 
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) Jonathan Dietrich  
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) FUZZY_DATE [TERM...]"
    echo "      Displays all done (as well as archived) tasks since the date specified."
    echo "      The FUZZY_DATE can be a human phrase for instance 'last thurs'."
    echo "      If TERM specified, lists only tasks that contain TERM(s)."
    echo ""
    exit
}

args=("$@")

# Create a new empty array to hold the filtered arguments
fuzzydate_params=()
filters=()

 # Loop through each argument
 for arg in "${args[@]}"; do
     # Check if the argument starts with a hyphen or plus
     # as these are filters to include or exclude
     if [[ ${arg:0:1} =~ [-+@] && ${#arg} -gt 1 ]]; then
         # Add the argument to the filtered array
         filters+=("$arg")
     else
         # Add the argument to the fuzzydate_params array
         fuzzydate_params+=("$arg")
     fi
 done

# Omit the "done" highlighting in favor of the more readable alternating task
# highlighting for readability; all tasks are done, anyway.
# export HIDE_COLOR_DONE=1
SINCE_DATE=$(fuzzydate "${fuzzydate_params[@]}" | cut -c 1-10)
export TODO_FILTER_DAY_OF_WEEK=$("${GNU_PREFIX}"date -d "${SINCE_DATE}" "+%A")

additional_filter_command="${GNU_PREFIX}awk -v date=\"${SINCE_DATE}\" 'match(\$0, /^ *[0-9]* *x [0-9]{4}-[0-9]{2}-[0-9]{2}/) && substr(\$0, (RSTART + RLENGTH - 10), 10) >= date' | "


# Find all projects.
readonly projects=$("$TODO_FULL_SH" command listproj "${filters[@]}")

# For each project show header and the list of tasks.
export HIDE_PROJECTS_SUBSTITUTION='[[:space:]][+][[:graph:]]\{1,\}' # Omitting all projects from the list.

export TODOTXT_VERBOSE=0

clear
echo "Standup Report (since ${SINCE_DATE})"

for project in $projects; do
    # Use core _list function, does numbering and coloring for us.
     # post_filter_command="${additional_filter_command}grep '$project\\( \\|$\\)'"
    export post_filter_command="${additional_filter_command} grep '$project\\( \\|$\\)'"
    # post_filter_command=additional_filter_command
    projectList_command=("${TODO_FULL_SH}" 'listall' "${filters[@]}")

    projectList=$("${projectList_command[@]}")
    if [ "${#projectList}" -gt 0 ]; then # Even though we're operating only on project tasks containing TERM, a task filter may still filter away all tasks for a project.

	projectCount=$(echo "${projectList}" | wc -l)
	# trim the whitespace
	projectCount="${projectCount#"${projectCount%%[![:space:]]*}"}"

	taskWord="task"
	if [ "${projectCount}" -gt 1 ]; then
	  taskWord="${taskWord}s"
	fi

	echo
	echo "----- ${project#+} (${projectCount} ${taskWord}) -----"
        echo "${projectList}"
	echo

    fi
done

