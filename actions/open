#!/bin/bash
###############################################################################
##
# FILE:         open
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 09-Oct-2013
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2013-2024 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)open	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) NR [NR ...]"
    echo "      Searches for attachments and all kinds of non-web URLs and non-task a:..."
    echo "      references in the task text on line(s) NR and launches them through their"
    echo "      associated application. For web resources, use the browse action instead."
    echo "    $(basename $0) [TERM...]"
    echo "      Displays all tasks that contain all kinds of non-web URLs and TERM(s)."
    echo ""
    exit
}

: ${TODOTXT_BROWSER_URL_SCHEMES:='\(http\|https\|file\|ftp\)://'}
: ${TODOTXT_BROWSER_URL_CHARACTERS:='[^ ()<>"]\+'}

# From RFC1738: scheme = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )
# But we exclude single-character schemes because that would match all Todo.txt
# markers.
: ${TODOTXT_OPEN_URL_SCHEMES:='[[:alpha:]][[:alnum:].+-]\+:'}

if [[ ! "$1" =~ ^[0-9]+$ ]]; then
    # Filter out a: references to other tasks and web resource URLs.
    post_filter_command="sed -e 's/ a:[0-9]\\+\\( \\|$\\)/\\1/g' -e 's#${TODOTXT_BROWSER_URL_SCHEMES}${TODOTXT_BROWSER_URL_CHARACTERS}##g' | grep -e '${TODOTXT_OPEN_URL_SCHEMES}${TODOTXT_BROWSER_URL_CHARACTERS}' -e ' a:\\([0-9]*[^0-9]\\)\\+[0-9]*\\( \\|\$\\)'"
    _list "$TODO_FILE" "$@"
    exit 0
fi

typeset -a urls=()
while [ $# -gt 0 ]
do
    item="$1"
    shift
    getTodo "$item"

    readarray -t taskUrls < <(echo "$todo" | grep -o "${TODOTXT_OPEN_URL_SCHEMES}${TODOTXT_BROWSER_URL_CHARACTERS}")
    readarray -t linkMarkers < <(echo "$todo" | grep -o '[^ ]*a:[^(][^[:space:]]*' | grep '^a:'; echo "$todo" | grep -o '[^ ]*a:([^)]\+)' | grep '^a:')
    if [ ${#taskUrls[@]} -eq 0 -a ${#linkMarkers[@]} -eq 0 ]; then
        [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $todo"
        echo "TODO: No URL found in task $item."
    fi

    IFS=$'\n'
    for url in "${taskUrls[@]}"
    do
        if ! printf %s "$url" | grep -q "${TODOTXT_BROWSER_URL_SCHEMES}${TODOTXT_BROWSER_URL_CHARACTERS}"; then
            urls+=("$url")
            echo "$url"
        fi
    done
    for linkMarker in "${linkMarkers[@]}"
    do
        url=${linkMarker#a:(}
        if [ "$url" = "$linkMarker" ]; then
            url=${linkMarker#a:}
        else
            url=${url%)}
        fi

        if ! [[ "$url" =~ / ]]; then
            # Attachments are scoped by the task's add date (if such is present).
            # Duplicated to attach
            [[ "$todo" =~ ^(\([A-Z]\) |[xX] [0-9]{4}-[0-9]{2}-[0-9]{2} )?([0-9]{4})-([0-9]{2})-([0-9]{2})\  ]] \
                && dateSubdir="${BASH_REMATCH[2]}/${BASH_REMATCH[3]}/${BASH_REMATCH[4]}/" \
                || dateSubdir=''
            url="${TODO_DIR}/attachments/${dateSubdir}${url}"
        fi

        urls+=("$url")
        echo "$url"
    done
done
[ ${#urls} -gt 0 ] || exit 1



if [ -n "$TODOTXT_OPENER" ]; then
    exec "$TODOTXT_OPENER" "${urls[@]}"
elif [ -n "$COMSPEC" ]; then
    comspecFilespec=$(cygpath "$COMSPEC" 2>/dev/null || printf %s "$COMSPEC")
    for url in "${urls[@]}"
    do
        "$comspecFilespec" /C start "$url"
    done
elif type -P xdg-open >/dev/null; then
    exec xdg-open "${urls[@]}"
else
    die "TODO: Cannot find an opener for general URLs; point the TODOTXT_OPENER environment variable to one."
fi
