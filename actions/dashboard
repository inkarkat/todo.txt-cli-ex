#!/bin/bash
###############################################################################
##
# FILE:         dashboard
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 06-Jan-2012
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2015 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) [TERM...]"
    echo "      Displays a dashboard overview of the current tasks."
    echo "      Useful for embedding into the desktop background via Conky, Samurize, etc."
    echo "      If TERM specified, considers only tasks that contain TERM(s)."
    echo ""
    exit
}

filter=
[ $# -gt 0 ] && filter="$* "

echo "    Pending ${filter}tasks:"
"$TODO_FULL_SH" what "$@"
"$TODO_FULL_SH" summary "$@"

modDate=$([ ${TODOTXT_RELTIME:-1} -ne 0 ] && reldate "$TODO_FILE" 2>/dev/null || date -d "$(${GNU_PREFIX}stat -c %y "$TODO_FILE")" '+%F %R')
echo "TODO: last modified ${modDate}"

if [ "$HOSTNAME" -a "$*" != "@$HOSTNAME" ]; then
    hereTaskNum=0
    hereTasks=$(TODOTXT_VERBOSE=0 "$TODO_FULL_SH" here "$@")
    if [ "$hereTasks" ]; then
        hereTaskNum=$(echo "$hereTasks" | "${GNU_PREFIX}"sed -n '$ =')
        echo
        echo "    Local ${filter}tasks @${HOSTNAME}:"
        echo "$hereTasks"
    fi

    if [ $# -gt 0 ]; then
        # When filter TERM(s) are given, still include information about any
        # other local tasks.
        allHereTaskNum=$(TODOTXT_VERBOSE=0 "$TODO_FULL_SH" here | "${GNU_PREFIX}"sed -n '$ =')
        if [ "$allHereTaskNum" ] && [ $allHereTaskNum -gt 0 ]; then
            if [ $hereTaskNum -gt 0 ]; then
                moreHereTaskNum=$((allHereTaskNum - hereTaskNum))
                if [ $moreHereTaskNum -gt 0 ]; then
                    echo "TODO: $moreHereTaskNum more local task(s) @${HOSTNAME}"
                fi
            else
                echo "TODO: $allHereTaskNum local task(s) @${HOSTNAME}"
            fi
        fi
    fi
fi

if [ -x "$TODO_ACTIONS_DIR/lsbumped" ]; then
    mostBumpedTasks=$(TODOTXT_VERBOSE=0 "$TODO_FULL_SH" lsbumped "$@" | "${GNU_PREFIX}"sed -e '1{ h; s/^.* \(!:[0-9]\+\).*$/\1/; x }' -e '1!{ G; / \(!:[0-9]\+\).*\n\1$/!{ s/.*//; q }; s/\n.*// }')
    if [ "$mostBumpedTasks" ]; then
        mostBumpedTasksNum=$(echo "$mostBumpedTasks" | "${GNU_PREFIX}"sed -n '$ =')
        if [ $mostBumpedTasksNum -gt 1 ]; then
            let num=$("${GNU_PREFIX}"date '+%-j')%${mostBumpedTasksNum}+1
            mostBumpedTask=$(echo "$mostBumpedTasks" | "${GNU_PREFIX}"sed -n "${num}p")
            mostBumpedAppendix=" (of ${mostBumpedTasksNum})"
        else
            mostBumpedTask=$mostBumpedTasks
            mostBumpedAppendix=
        fi
        echo
        echo "    Most bumped ${filter}task${mostBumpedAppendix}:"
        echo "$mostBumpedTask"
    fi
fi

echo
echo "    Last ${filter}tasks:"
TODOTXT_VERBOSE=0 "$TODO_FULL_SH" last "$@"
