#!/bin/bash
###############################################################################
##
# FILE:         pri
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 27-May-2010
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2024 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)pri	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) PRIORITY|none [on DATE|DATE-] [until DATE|-DATE] ITEM#[, ITEM#, ...] [COMMENT]"
    echo "    $(basename $0) PRIORITY|none ITEM#[, ITEM#, ...] [on DATE|DATE-] [until DATE|-DATE] [COMMENT]"
    echo "    $(basename $0) ITEM#[, ITEM#, ...] PRIORITY|none [on DATE|DATE-] [until DATE|-DATE] [COMMENT]"
    echo "      Adds PRIORITY to task(s) on line ITEM#, or deprioritizes with none."
    echo "      With DATE-, prioritization will only happen on DATE (via A:DATE)."
    echo "      With -DATE, the task will stay prioritized until DATE (via d:DATE)."
    echo "      Remove a (de-)prioritization on DATE via priority=none. For immediate"
    echo "      deprioritization, use depri."
    echo ""
    exit
}

shopt -s extglob

errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...] PRIORITY|none [on DATE|DATE-] [until DATE|-DATE] [COMMENT]"
beginDate=
endDate=
makeDate()
{
    date -d "$1" +%F
}
datePri()
{
    local marker=$1
    local date=$2

    getTodo "$item"

    if [ "$marker" = 'NONE' ]; then
        # Remove any (de-)priorizations for the same date.
        newtodo=$(echo "$todo" | sed -e "s| [dA-Z]:${date}||")
    else
        # Remove any (de-)priorizations for the same date.
        # Replace existing date-priorization with the same priority in-place or
        # append new date-priorization.
        newtodo=$(echo "$todo" | sed -e "s| [dA-Z]:${date}||" | sed -e "s| ${marker}:"'\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}'"| ${marker}:${date}|" -e t -e "s| *\$| ${marker}:${date}|")
    fi

    input=$newtodo
    cleaninput "for sed"
    sed -i.bak "$item s|^.*|${input}|" "$TODO_FILE" || exit $?
}

typeset -a items=()
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items+=("$1")
    shift
done
if [[ "$1" = [a-zA-Z] || "$1" = 'none' ]]; then
    pri=$1
    shift
else
    die "$errmsg"
fi
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items+=("$1")
    shift
done
while [ $# -gt 0 ]
do
    case "$1" in
        on)     beginDate=$(makeDate "$2") || exit 1; shift; shift;;
        [^-]*-) beginDate=$(makeDate "${1%-}") || exit 1; shift;;
        until)  endDate=$(makeDate "$2") || exit 1; shift; shift;;
        -*[^-]) endDate=$(makeDate "${1#-}") || exit 1; shift;;
        *)      break;;
    esac
done
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items+=("$1")
    shift
done
[ ${#items} -gt 0 ] || die "$errmsg"
newpri=${pri^^}

for item in ${items[*]//,/ }
do
    whenwhat=
    [[ "$item" = +([0-9]) ]] || die "$errmsg"

    if [ "$beginDate" ]; then
        if [ "$pri" = "none" ]; then
            whenwhat="will be deprioritized on $beginDate"
        else
            whenwhat="will be prioritized ($newpri) on $beginDate"
        fi
        datePri "$newpri" "$beginDate"

        if [ "$endDate" ]; then
            whenwhat+=", until $endDate"
            datePri "d" "$endDate"
        fi
    else
        if [ "$pri" = "none" ]; then
            action='depri'
            newpri=''
        else
            action='pri'
        fi

        # Call back to the main script to prioritize each task.
        if [ "$endDate" ]; then
            if [ "$pri" = 'none' ]; then
                whenwhat="will not be deprioritized on $endDate"
                datePri 'NONE' "$endDate"
            else
                TODOTXT_VERBOSE=0 "$TODO_FULL_SH" command $action $item $newpri
                whenwhat="prioritized ($newpri) until $endDate"
                datePri 'd' "$endDate"
            fi
        else
            "$TODO_FULL_SH" command $action $item $newpri || exit $?
        fi
    fi

    if [ "$whenwhat" ]; then
        if [ "$newtodo" = "$todo" ]; then
            [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $newtodo"
            die "TODO: Priorization didn't change."
        elif [ $TODOTXT_VERBOSE -gt 0 ]; then
            echo "$item $newtodo"
            echo "TODO: $item $whenwhat."
        fi
    fi

    if [ "$*" ]; then
        # Append optional COMMENT.
        "$TODO_FULL_SH" command append $item "$@" || exit $?
    fi
done
