#!/bin/bash
###############################################################################
##
# FILE:         untrash
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 19-Aug-2010
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2013 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)untrash	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) last|ITEM#[, ITEM#, ITEM#, ...]"
    echo "      Puts the trashed task(s) on line ITEM# from trash.txt back to"
    echo "      todo.txt."
    echo ""
    exit
}

shopt -s extglob
errmsg="usage: $TODO_SH $(basename $0) last|ITEM#[, ITEM#, ITEM#, ...]"

TRASH_FILE=${TRASH_FILE:-$TODO_DIR/trash.txt}

[ $# -eq 0 ] && die "$errmsg"

cleanup()
{
    # Finally delete the marked lines.
    "${GNU_PREFIX}"sed -i.bak -e '/^!DELETED$/d' "$TRASH_FILE" || exit $?
}
trap 'cleanup' EXIT

# Split multiple untrash's, if comma separated change to whitespace separated.
# Loop the 'untrash' function for each task.
for item in ${*//,/ }
do
    if [ "$item" = 'last' ]; then
        item=$("${GNU_PREFIX}"sed -n '$ =' "$TRASH_FILE") || exit $?
    fi

    getTodo "$item" "$TRASH_FILE"

    # Move task to todo.txt, without the "X" trashed marker and timestamp that
    # has been prepended by the 'trash' command.
    "${GNU_PREFIX}"sed -e "$item!d" -e $item's/^\(X \)\?[0-9]\{2,4\}-[0-9]\{2\}-[0-9]\{2\} //' "$TRASH_FILE" >> "$TODO_FILE" || exit $?

    # Delete line (changes line numbers, but that's okay in the trash).
    # Note: Cannot actually remove lines inside the loop, as this may make
    # following task numbers invalid.
    "${GNU_PREFIX}"sed -i.bak -e $item"s/^.*/!DELETED/" "$TRASH_FILE" || exit $?

    TASKNUM=$("${GNU_PREFIX}"sed -n '$ =' "$TODO_FILE") || exit $?
    if [ $TODOTXT_VERBOSE -gt 0 ]; then
        echo "$(getPrefix "$TRASH_FILE"): $item untrashed to $TASKNUM."
        getNewtodo "$TASKNUM"
        echo "$TASKNUM: $newtodo"
    fi

    "$TODO_FULL_SH" uncomment -q "$TASKNUM"
done
