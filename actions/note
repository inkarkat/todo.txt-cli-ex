#!/bin/bash

TODO_NOTES_DIR=${TODO_NOTES_DIR:-$TODO_DIR/notes}
TODO_NOTE_TAG=${TODO_NOTE_TAG:-note}
TODO_NOTE_TEMPLATE=${TODO_NOTE_TEMPLATE:-XXX}
TODO_NOTE_EXT=${TODO_NOTE_EXT:-.txt}
TODO_NOTE_ARCHIVE="$TODO_NOTES_DIR/archive$TODO_NOTE_EXT"
TODO_NOTE_PAGER=${TODO_NOTE_PAGER:-cat}

usage() {
    echo "    $(basename $0) add|a ITEM#"
    echo "      Adds a note to the task on line ITEM#."
    echo "    $(basename $0) edit|e ITEM#|archive|a"
    echo "      Opens in EDITOR the note related with the task on line ITEM# or the notes archive."
    echo "    $(basename $0) show|s ITEM#|archive|a"
    echo "      Shows the note related with the task on line ITEM# or the notes archive."
}

getnotenamefromnumber() {
    # Parameters:
    #    $1: task number
    # Preconditions:
    #   $errmsg contains usage message.
    # Postcondition:
    #     $notename contains note name, if task has note.
    #     $item contains the task name

    item="$1"

    getTodo "$item"
    getnotenamefromtext "$todo"
}

getnotenamefromtext() {
    # Parameters: $1: task text
    # Preconditions: none
    # Postcondition:
    #     $notename contains note name, if task has note.

    notename=$(echo "$1" | grep -o " $TODO_NOTE_TAG:[^ .]*${TODO_NOTE_EXT}" | grep -o "[^:]*${TODO_NOTE_EXT}")
}

editnote() {
    # Parameter:: $1: Path of the file to edit
    # Preconditions: none
    # Postcondition: none
    if [ "$EDITOR" ]
    then
        $EDITOR "$1"
    else
        echo The EDITOR environment variable is not set.
    fi

}

getnotefilepath () {
    # Parameter:: $1: Task number or reference to file
    # Preconditions:
    # Postcondition: $notefilepath contains the path of the file to edit or show

    item="$1"

    if [[ "$item" ]] && [[ archive =~ ^${item}.*$ ]]
    then
        notefilepath=$TODO_NOTE_ARCHIVE
    else
        getnotenamefromnumber $1

        if [ $notename ]
        then
            notefilepath="$TODO_NOTES_DIR/${notename}"
        else
            die "TODO: Task $item has no note."
        fi
    fi
}

if [ "$1" = "usage" ]
then
    usage
    exit 0
fi

shift
TODO_NOTE_ACTION=$1
shift

case "$TODO_NOTE_ACTION" in
"add" | "a")
    errmsg="usage: $TODO_SH $(basename $0) $TODO_NOTE_ACTION ITEM#"
    getnotenamefromnumber $1

    [ $notename ] && die "TODO: Task $item already has a note."
    
    # Create notes directory if doesn't exist
    [ -d "$TODO_NOTES_DIR" ]  || mkdir -p "$TODO_NOTES_DIR" 2> /dev/null || die "Error: $TODO_NOTES_DIR is not a directory"

    # Create file
    filename=$(mktemp "$TODO_NOTES_DIR/${TODO_NOTE_TEMPLATE}")
    notename=$(basename "$filename${TODO_NOTE_EXT}")
    title=$(echo "$todo" | "${GNU_PREFIX}"sed -e "s/^\(x ....-..-.. \)\?//" -e "s/^(.) \?//")
    echo \# $title > "$TODO_NOTES_DIR/${notename}"
    # remove temp file created
    rm -f "${filename}"

    # Append note tag to task
    "$TODO_SH" command append "$item" "${TODO_NOTE_TAG}:$notename"

    getTodo "$item"
    echo TODO: Note added to task $item.

    echo "Edit note?  (y/n)"
    read ANSWER
    if [ "$ANSWER" = "y" ]
    then
        editnote "$TODO_NOTES_DIR/${notename}"
    fi
    ;;

"edit" | "e")
    errmsg="usage: $TODO_SH $(basename $0) edit|e ITEM#|archive|a"
    getnotefilepath $*
    editnote "$notefilepath"
    ;;

"show" | "s")
    errmsg="usage: $TODO_SH $(basename $0) show|s ITEM#|archive|a"
    getnotefilepath $*
    $TODO_NOTE_PAGER "$notefilepath"
    ;;

"__archive")
    getnotenamefromtext "$*"

    if [ $notename ]
    then
        cat "$TODO_NOTES_DIR/${notename}" >> "$TODO_NOTE_ARCHIVE"
        echo >> "$TODO_NOTE_ARCHIVE" ## Add blank line
        rm -f "$TODO_NOTES_DIR/${notename}"
    fi
    ;;

"__rmfromtext")
    getnotenamefromtext "$*"
    if [ -n "$notename" ]; then
      rm -f "$TODO_NOTES_DIR/$notename"
    fi
    ;;

*)
    usage
    ;;

esac
