#!/bin/bash
###############################################################################
##
# FILE:         join
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 27-Jan-2014
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2014-2022 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)join	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) TARGET# [DELIM] ITEM# [[DELIM] ITEM# ...]"
    echo "      Appends all tasks ITEM# (space-delimited or by DELIM) to task TARGET#"
    echo "      and then deletes them. Done markers, priorities, and dates are ignored,"
    echo "      prefixed and appended markers are processed separately and added only"
    echo "      once."
    echo ""
    exit
}

shopt -s extglob
. "${TODO_ACTIONS_DIR}/../lib/common.sh"

errmsg="usage: $TODO_SH $(basename $0) TARGET# [DELIM] ITEM# [[DELIM] ITEM# ...]"

containsPrepends()
{
    for tp in "${targetPrepends[@]}"
    do
        [ "$tp" = "$1" ] && return 0
    done
    return 1
}
containsAppends()
{
    for ta in "${targetAppends[@]}"
    do
        [ "$ta" = "$1" ] && return 0
    done
    return 1
}

target=$1; shift
[ -z "$target" ] && die "$errmsg"
[[ "$target" = +([0-9]) ]] || die "$errmsg"
getTodo "$target"
targetTodo=$todo

splitTodo "$targetTodo"
targetDoneMarkerAndDate=$doneMarkerAndDate
targetPriAndAddDate=$priAndAddDate
typeset -a targetPrepends=($prepends)
targetText=$text
typeset -a targetAppends=($appends)

isJoined=
items=
while [ $# -gt 0 ]
do
    if [[ "$1" = +([0-9]) ]]; then
        delim=' '
        item=$1
        shift
    elif [[ "$2" = +([0-9]) ]]; then
        if [[ "$1" =~ ^[[:alpha:]] ]]; then
            delim=" $1 "
        else
            delim=$1
        fi
        item=$2
        shift
        shift
    else
        die "$errmsg"
    fi

    items+="${items:+ }$item"
    getTodo "$item"
    splitTodo "$todo"

    if [ "$text" ]; then
        targetText+="${delim}${text}"
        isJoined=t
    fi
    for p in $prepends
    do
        containsPrepends "$p" || { targetPrepends+=("$p"); isJoined=t; }
    done
    for a in $appends
    do
        containsAppends "$a" ||  { targetAppends+=("$a"); isJoined=t; }
    done
done
if [ ! "$isJoined" ]; then
    die "TODO: Nothing to join"
fi

IFS=' '
newtodo="${targetDoneMarkerAndDate}${targetPriAndAddDate}${targetPrepends[*]}${targetPrepends:+ }${targetText}${targetAppends:+ }${targetAppends[*]}"

# The 'replace' command doesn't handle done tasks, and may do surprising things
# to existing priorities and dates. To avoid surprises, do the complete
# replacement of the line here.
input=$newtodo
cleaninput "for sed"
"${GNU_PREFIX}"sed -i.bak "$target s|^.*|${input}|" "$TODO_FILE" || exit $?
if [ $TODOTXT_VERBOSE -gt 0 ]; then
    echo "$target $targetTodo"
fi

"$TODO_FULL_SH" -f del $items

if [ $TODOTXT_VERBOSE -gt 0 ]; then
    echo "TODO: Joined task:"
    echo "$target $newtodo"
fi
