#!/usr/bin/env bash
###############################################################################
##
# FILE:         wait
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 28-Jun-2010
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2022 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)wait	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) NR [NR ...] \"REASON for Waiting\"[, REASON, ...]"
    echo "      Mark the task(s) on line NR as blocked due to REASON."
    echo "    $(basename $0) NR [NR ...] for DEPNR[, DEPNR, ...]"
    echo "      Mark the task(s) on line NR as dependent on task(s) DEPNR."
    echo ""
    exit
}

set -o pipefail

errmsg="usage: $TODO_SH $(basename $0) NR [NR ...] \"REASON for Waiting\"[, REASON, ...] | for DEPNR[, DEPNR, ...]"

[ $# -eq 0 ] && die "$errmsg"

items=
while [[ "$1" =~ ^[,0-9]+$ ]]
do
    items+=" $1"; shift
done
[ "$items" -a $# -gt 0 ] || die "$errmsg"

if [[ "$*" =~ ^for\ +[0-9,\ ]+$ ]]; then
    # We have dependent tasks: DEPNR.
    shift # Remove the "for" filler argument.
    waitDescription="has become dependent on"

    waitReasons=
    for waitDependentTaskNum in ${*//,/ }
    do
        waitReasons=${waitReasons}${waitReasons:+ }w:${waitDependentTaskNum}
    done

    IFS=,
    waitReasonText="$*"
    unset IFS
    waitReasonText="${waitReasonText//,/, }"
else
    # We have reason(s).
    waitDescription="is blocked due to"

    waitReasons=
    # Split REASONs based on commas, not whitespace. A multi-word single REASON is
    # far more frequent than multiple REASONs. Splitting on whitespace would
    # necessitate enclosing each REASON in double quotes.
    IFS=,
    for waitReason in $(echo "$@" | sed -e 's/, \+/,/g')
    do
        # Enclose REASONs in parentheses if they consist of multiple words.
        waitReasons=${waitReasons}${waitReasons:+ }w:$(echo "$waitReason" | sed -e '/[ \t]/s/.*/(&)/')
    done
    unset IFS
    waitReasonText=$waitReasons
fi

# Split multiple wait's, if comma separated change to whitespace separated.
for item in ${items//,/ }
do
    # Deprioritize in case it's currently prioritized.
    if sed "$item!d" "$TODO_FILE" | grep -e '^(.) '; then
        "$TODO_FULL_SH" command depri $item || continue
    fi

    "$TODO_FULL_SH" command append $item "$waitReasons"
    if [ $TODOTXT_VERBOSE -gt 0 ]; then
        echo "TODO: $item $waitDescription ${waitReasonText}."
    fi
done
