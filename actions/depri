#!/bin/bash
###############################################################################
##
# FILE:         depri
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 16-Dec-2011
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2024 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)depri	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) ITEM#[, ITEM#, ITEM#, ...]|all|[PRIORITIES] [on DATE|DATE-] [COMMENT]"
    echo "    $(basename $0) [on DATE|DATE-] ITEM#[, ITEM#, ITEM#, ...]|all|[PRIORITIES] [COMMENT]"
    echo "      Deprioritizes (removes the priority) from the task(s)"
    echo "      on line ITEM# in todo.txt, or all (currently) prioritized tasks, or all"
    echo "      (currently) having PRIORITIES (a single one (A) or range (A-C))."
    echo "      With DATE-, the task will be deprioritized on DATE (via d:DATE)."
    echo "    $(basename $0) [never|on none] ITEM#[, ITEM#, ITEM#, ...]|all|[PRIORITIES] [COMMENT]"
    echo "      Removes the d:DATE deprioritization on a date."
    echo ""
    exit
}

errmsg="usage: $TODO_SH $(basename $0) ITEM#[, ITEM#, ITEM#, ...]|all|[PRIORITIES] [never|on none|on DATE|DATE-] [COMMENT]"
[ $# -eq 0 ] && die "$errmsg"

makeDate()
{
    date -d "$1" +%F
}

items=
endDate=

while [ $# -gt 0 ]
do
    case "$1" in
        never)  endDate='never'; shift;;
        on)     if [ "$2" = 'none' -o "$2" = 'never' ]; then
                    endDate='never'; shift; shift
                else
                    endDate=$(makeDate "$2") || exit 1; shift; shift
                fi
                ;;
        [^-]*-) endDate=$(makeDate "${1%-}") || exit 1; shift;;
        *)      break;;
    esac
done
if [ "$1" = 'all' ]; then
    shift
    what='prioritized tasks'
    pri='.'
else
    if pri=$(printf '%s' "${1^^}" | grep -e '^[A-Z]$' -e '^[A-Z]-[A-Z]$'); then
        shift
        what="tasks prioritized ${pri}"
        pri="[${pri}]"
    fi
fi
if [ "$pri" ]; then
    items=$(sed -ne "/^(\\(${pri}\\)) /=" "$TODO_FILE") || exit $?
    [ "$items" ] || die "TODO: No ${what}."
else
    while [[ "$1" =~ ^[,0-9]+$ ]]
    do
        items+=" $1"; shift
    done
fi
while [ $# -gt 0 ]
do
    case "$1" in
        never)  endDate='never'; shift;;
        on)     if [ "$2" = 'none' -o "$2" = 'never' ]; then
                    endDate='never'; shift; shift
                else
                    endDate=$(makeDate "$2") || exit 1; shift; shift
                fi
                ;;
        [^-]*-) endDate=$(makeDate "${1%-}") || exit 1; shift;;
        *)      break;;
    esac
done

[ "$items" ] || die "$errmsg"

for item in ${items//,/ }
do
    if [ "$endDate" ]; then
        getTodo "$item"

        if [ "$endDate" = 'never' ]; then
            # Remove existing date-deprioritization.
            newtodo=$(echo "$todo" | sed -e 's| d:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}||') || exit $?
        else
            # Replace existing date-deprioritization with the same deprioritization
            # in-place or append new date-deprioritization.
            newtodo=$(echo "$todo" | sed -e 's| d:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}| '"d:${endDate}|" -e t -e "s| *\$| d:${endDate}|") || exit $?
        fi

        input=$newtodo
        cleaninput "for sed"
        sed -i.bak "$item s|^.*|${input}|" "$TODO_FILE" || exit $?

        if [ "$newtodo" = "$todo" ]; then
            [ $TODOTXT_VERBOSE -gt 0 ] && echo "$item $newtodo"
            die "TODO: Prioritization didn't change."
        fi
        if [ $TODOTXT_VERBOSE -gt 0 ]; then
            echo "$item $newtodo"
            if [ "$endDate" = 'never' ]; then
                echo "TODO: $item will never be deprioritized."
            else
                echo "TODO: $item will be deprioritized on $endDate."
            fi
        fi
    else
        "$TODO_FULL_SH" command depri $item || exit $?
    fi

    if [ $# -gt 0 ]; then
        # Append optional COMMENT.
        "$TODO_FULL_SH" command append $item "$@" || exit $?
    fi
done
