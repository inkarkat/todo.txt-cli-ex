#!/usr/bin/env bash
###############################################################################
##
# FILE:         split
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 19-Apr-2012
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2012-2014 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)split	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) NR [PATTERN]"
    echo "      Splits task on line NR on PATTERN (or the word \"and\") and creates"
    echo "      new task(s) for them. Dates, priorities, projects, contexts and markers"
    echo "      are cloned to the new task(s); a done / trashed status is not."
    echo ""
    exit
}

shopt -s extglob
. "${TODO_ACTIONS_DIR}/../lib/common.sh"

errmsg="usage: $TODO_SH $(basename $0) NR [PATTERN]"
item=$1; shift
if [ $# -eq 0 ]; then
    pattern=',\? \+and \+'
elif [ "$*" ]; then
    pattern=$*
else
    die "TODO: PATTERN must not be empty!"
fi

[ -z "$item" ] && die "$errmsg"
[[ "$item" = +([0-9]) ]] || die "$errmsg"
getTodo "$item"

splitTodo "$todo"

splitText=$(echo "$text" | sed -e "s/${pattern}/\\n/g")
if [ "$splitText" = "$text" ]; then
    die "TODO: No split on \"${pattern}\" possible."
fi

isFirst=t
while IFS=$'\n' read -r text
do
    newtodo="${priAndAddDate}${prepends}${text}${appends}"
    if [ "$isFirst" ]; then
        # The 'replace' command doesn't handle done tasks, and may do surprising
        # things to existing priorities and dates. To avoid surprises, do the
        # complete replacement of the line here.
        input=$newtodo
        cleaninput "for sed"
        sed -i.bak "$item s|^.*|${input}|" "$TODO_FILE" || exit $?
        if [ $TODOTXT_VERBOSE -gt 0 ]; then
            echo "$item $todo"
            echo "TODO: Replaced task with first part:"
            echo "$item $newtodo"
        fi
        isFirst=
    else
        "$TODO_FULL_SH" -T add "$newtodo" || exit $?
    fi
done <<< "$splitText"
