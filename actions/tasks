#!/bin/bash
###############################################################################
##
# FILE:         tasks
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 28-Oct-2011
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2020 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)tasks	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0)"
    echo "      Extracts the ITEM# task numbers from the output of a todo.sh command,"
    echo "      so that these can be processed or supplied to another command."
    echo "      Example: List all task numbers of tasks with priority c:"
    echo "        todo.sh listpri c | todo.sh tasks"
    echo "    $(basename $0) ACTION [ACTION_ARGUMENTS]"
    echo "      Extracts the ITEM# task numbers from the output of a todo.sh command,"
    echo "      and passes each to todo.sh ACTION ITEM# [ACTION_ARGUMENTS]"
    echo "      Example: Re-prioritize all tasks with priority c to priority z:"
    echo "        todo.sh listpri c | todo.sh tasks pri z"
    echo "      (But you can also use the dedicated action: todo.sh repri c z.)"
    echo ""
    exit
}

# Configuration of (built-in and add-on) actions that handle multiple ITEM#
# after the action.
: ${TODOTXT_TASKS_MULTIACTIONS:=depri dp do}

typeset action=
typeset actionPrefix=
if [ $# -gt 0 ]; then
    if [ "$1" = 'command' ]; then
        actionPrefix='command '
        action=$2
        shift
        shift
    else
        action=$1
        shift
    fi
fi

typeset items=$("${GNU_PREFIX}"sed -n -e '
# Filter ANSI escape sequences used for highlighting.
# (Technically, this is the SGR (Select Graphic Rendition) CSI.)
s/\[[0-9;]\+m//g

# Stop parsing when the todo.txt verbose footer is encountered, or at the end of
# the output.
/^--$/q

# Extract the task number.
/^[0-9]\+ /!b
s/^\([0-9]\+\) .*$/\1/p
')

[ "$items" ] || exit 1
items=${items//$'\n'/ } # Flatten all collected task numbers into a space-delimited list.

if [ "$action" ]; then
    if [[ " $TODOTXT_TASKS_MULTIACTIONS " == *\ ${action}\ * ]]; then
        "$TODO_FULL_SH" ${actionPrefix}${action} $items "$@" || exit $?
    else
        typeset item
        for item in $items
        do
            "$TODO_FULL_SH" ${actionPrefix}${action} $item "$@" || exit $?
        done
    fi
else
    echo "$items"
fi
